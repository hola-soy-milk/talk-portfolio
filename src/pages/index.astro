---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import RandomTalk from "../components/RandomTalk.jsx";
import meImg from "../assets/ramon.jpg";
import GitHubProject from "../components/GitHubProject.astro";
import Repo from "../types/Repo";
import { queryReposForUser } from "../utils/GitHubRepos"
const talks = await getCollection("talks");

const me = {
  firstNames: "RamÃ³n",
  lastNames: "Huidobro",
  gitHubUsername: "hola-soy-milk",
};

const fullName = [me.firstNames, me.lastNames].join(" ")

const reposWithImages = await queryReposForUser(me.gitHubUsername);
---

<Layout title={`${fullName}: Speaker and Open Source Developer`}>
  <main>
    <h1 class="text-gradient">Hey there, I'm {me.firstNames}! ðŸ‘‹</h1>
    <h2>Tech Talks</h2>
    <RandomTalk client:load talks={talks} />
    <h2>GitHub Projects</h2>
    <ul role="list" class="repo-grid">
      {reposWithImages.map((repo: Repo) => <GitHubProject repo={repo} />)}
    </ul>
  </main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
	.repo-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
